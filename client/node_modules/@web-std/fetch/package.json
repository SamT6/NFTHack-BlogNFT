{
  "_args": [
    [
      "@web-std/fetch@1.0.0",
      "/Users/andrewyoung/NFTHack-BlogNFT/client"
    ]
  ],
  "_from": "@web-std/fetch@1.0.0",
  "_id": "@web-std/fetch@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-ghp1XUrJf1Ue4hSMC5In6b1osL+iYmyqIFNS4c/3sIsBjX3j6doWG1hXCEQYk88OwXLbSzAIc6q0mBnIbkUVjg==",
  "_location": "/@web-std/fetch",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@web-std/fetch@1.0.0",
    "name": "@web-std/fetch",
    "escapedName": "@web-std%2ffetch",
    "scope": "@web-std",
    "rawSpec": "1.0.0",
    "saveSpec": null,
    "fetchSpec": "1.0.0"
  },
  "_requiredBy": [
    "/nft.storage"
  ],
  "_resolved": "https://registry.npmjs.org/@web-std/fetch/-/fetch-1.0.0.tgz",
  "_spec": "1.0.0",
  "_where": "/Users/andrewyoung/NFTHack-BlogNFT/client",
  "author": {
    "name": "David Frank"
  },
  "bugs": {
    "url": "https://github.com/node-fetch/node-fetch/issues"
  },
  "dependencies": {
    "data-uri-to-buffer": "^3.0.1",
    "fetch-blob": "^2.1.1"
  },
  "description": "A light-weight module that brings Fetch API to node.js",
  "devDependencies": {
    "abort-controller": "^3.0.0",
    "abortcontroller-polyfill": "^1.5.0",
    "busboy": "^0.3.1",
    "c8": "^7.3.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-iterator": "^3.0.2",
    "chai-string": "^1.5.0",
    "coveralls": "^3.1.0",
    "delay": "^4.4.0",
    "form-data": "^3.0.0",
    "formdata-node": "^2.4.0",
    "mocha": "^8.1.3",
    "p-timeout": "^3.2.0",
    "rollup": "^2.26.10",
    "tsd": "^0.13.1",
    "xo": "^0.33.1"
  },
  "engines": {
    "node": "^10.17 || >=12.3"
  },
  "esm": {
    "sourceMap": true,
    "cjs": false
  },
  "exports": {
    ".": {
      "import": "./src/index.js",
      "require": "./dist/index.cjs"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "src",
    "dist",
    "@types/index.d.ts"
  ],
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/node-fetch"
  },
  "homepage": "https://github.com/node-fetch/node-fetch",
  "keywords": [
    "fetch",
    "http",
    "promise",
    "request",
    "curl",
    "wget",
    "xhr",
    "whatwg"
  ],
  "license": "MIT",
  "main": "./dist/index.cjs",
  "module": "./src/index.js",
  "name": "@web-std/fetch",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/node-fetch/node-fetch.git"
  },
  "runkitExampleFilename": "example.js",
  "scripts": {
    "build": "rollup -c",
    "coverage": "c8 report --reporter=text-lcov | coveralls",
    "lint": "xo",
    "prepublishOnly": "node ./test/commonjs/test-artifact.js",
    "test": "node --experimental-modules ../node_modules/c8/bin/c8 --reporter=html --reporter=lcov --reporter=text --check-coverage node --experimental-modules ../node_modules/mocha/bin/mocha",
    "test-types": "tsd"
  },
  "sideEffects": false,
  "tsd": {
    "cwd": "@types",
    "compilerOptions": {
      "target": "esnext",
      "lib": [
        "es2018"
      ],
      "allowSyntheticDefaultImports": false,
      "esModuleInterop": false
    }
  },
  "type": "module",
  "types": "./@types/index.d.ts",
  "version": "1.0.0",
  "xo": {
    "envs": [
      "node",
      "browser"
    ],
    "rules": {
      "complexity": 0,
      "import/extensions": 0,
      "import/no-useless-path-segments": 0,
      "import/no-anonymous-default-export": 0,
      "unicorn/import-index": 0,
      "unicorn/no-reduce": 0,
      "capitalized-comments": 0
    },
    "ignores": [
      "dist",
      "@types"
    ],
    "overrides": [
      {
        "files": "test/**/*.js",
        "envs": [
          "node",
          "mocha"
        ],
        "rules": {
          "max-nested-callbacks": 0,
          "no-unused-expressions": 0,
          "new-cap": 0,
          "guard-for-in": 0,
          "unicorn/prevent-abbreviations": 0,
          "promise/prefer-await-to-then": 0,
          "ava/no-import-test-files": 0
        }
      },
      {
        "files": "example.js",
        "rules": {
          "import/no-extraneous-dependencies": 0
        }
      }
    ]
  }
}
